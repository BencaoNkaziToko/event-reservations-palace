<!DOCTYPE html>
<html lang="en">
  <head>
    <meta http-equiv="X-UA-Compatible" content="IE=edge" />
    <title>Datatables - Kaiadmin Bootstrap 5 Admin Dashboard</title>
    <meta
      content="width=device-width, initial-scale=1.0, shrink-to-fit=no"
      name="viewport"
    />
    <link
      rel="icon"
      href="../assets/img/kaiadmin/favicon.ico"
      type="image/x-icon"
    />

    <!-- Fonts and icons -->
    <script src="../assets/js/plugin/webfont/webfont.min.js"></script>
    <script>
      WebFont.load({
        google: { families: ["Public Sans:300,400,500,600,700"] },
        custom: {
          families: [
            "Font Awesome 5 Solid",
            "Font Awesome 5 Regular",
            "Font Awesome 5 Brands",
            "simple-line-icons",
          ],
          urls: ["../assets/css/fonts.min.css"],
        },
        active: function () {
          sessionStorage.fonts = true;
        },
      });
    </script>

    <!-- CSS Files -->
    <link rel="stylesheet" href="../assets/css/bootstrap.min.css" />
    <link rel="stylesheet" href="../assets/css/plugins.min.css" />
    <link rel="stylesheet" href="../assets/css/kaiadmin.min.css" />

    <!-- CSS Just for demo purpose, don't include it in your project -->
    <link rel="stylesheet" href="../assets/css/demo.css" />
  </head>
  <body>
    <div class="wrapper">
      <!-- Sidebar -->
      <div class="sidebar" data-background-color="dark">
        <div class="sidebar-logo">
          <!-- Logo Header -->
          <div class="logo-header" data-background-color="dark">
            <a href="index.html" class="logo text-light">
              <img
                src="img/logo.png"
                alt="navbar brand"
                class="navbar-brand"
                height="60"
                width="60"
              />
              -Dasboard
            </a>
            <div class="nav-toggle">
              <button class="btn btn-toggle toggle-sidebar">
                <i class="gg-menu-right"></i>
              </button>
              <button class="btn btn-toggle sidenav-toggler">
                <i class="gg-menu-left"></i>
              </button>
            </div>
            <button class="topbar-toggler more">
              <i class="gg-more-vertical-alt"></i>
            </button>
          </div>
          <!-- End Logo Header -->
        </div>
        <div class="sidebar-wrapper ">
          <div class="sidebar-content">
            <ul class="nav nav-secondary">
              <li class="nav-item active">
                <a
                  data-bs-toggle=""
                  href="#dashboard"
                  class=""
                  aria-expanded=""
                >
                  <i class="fas fa-home"></i>
                  <p>Inico</p>
                  <span class=""></span>
                </a>
              </li>
              <li class="nav-section">
                <span class="sidebar-mini-icon">
                  <i class="fa fa-ellipsis-h"></i>
                </span>
                <h4 class="text-section">Gerenciamento</h4>
              </li>
              <li class="nav-item">
                <a data-bs-toggle="collapse" href="#sidebarLayouts">
                  <i class="fas fa-check-circle"></i>
                  <p>Reservas</p>
                  <span class=""></span>
                </a>
              </li>
              <li class="nav-item">
                <a data-bs-toggle="collapse" href="#sidebarLayouts">
                  <i class="fas fa-th-list"></i>
                  <p>Pacotes</p>
                  <span class=""></span>
                </a>
              </li>
              <li class="nav-item">
                <a data-bs-toggle="collapse" href="#forms">
                  <i class="fas fa-pen-square"></i>
                  <p>Cardapio</p>
                  <span class=""></span>
                </a>
              </li>
              <li class="nav-item">
                <a data-bs-toggle="collapse" href="#charts">
                  <i class="far fa-chart-bar"></i>
                  <p>Relatórios e Gráficos</p>
                  <span class="caret"></span>
                </a>
                <div class="collapse" id="charts">
                  <ul class="nav nav-collapse">
                    <li>
                      <a href="charts/charts.html">
                        <span class="sub-item">Reservas</span>
                      </a>
                    </li>
                    <li>
                      <a href="charts/sparkline.html">
                        <span class="sub-item">Finanças</span>
                      </a>
                    </li>
                    <li>
                      <a href="charts/sparkline.html">
                        <span class="sub-item">Pacotes</span>
                      </a>
                    </li>
                     <li>
                      <a href="charts/sparkline.html">
                        <span class="sub-item">Horários</span>
                      </a>
                    </li>
                  </ul>
                </div>
              </li>
            </ul>
          </div>
        </div>
      </div>
      <!-- End Sidebar -->

      <div class="main-panel">
        <div class="main-header">
          <div class="main-header-logo">
            <!-- Logo Header -->
            <div class="logo-header" data-background-color="dark">
              <a href="index.html" class="logo">
                <img
                  src="assets/img/kaiadmin/logo_light.svg"
                  alt="navbar brand"
                  class="navbar-brand"
                  height="20"
                />
              </a>
              <div class="nav-toggle">
                <button class="btn btn-toggle toggle-sidebar">
                  <i class="gg-menu-right"></i>
                </button>
                <button class="btn btn-toggle sidenav-toggler">
                  <i class="gg-menu-left"></i>
                </button>
              </div>
              <button class="topbar-toggler more">
                <i class="gg-more-vertical-alt"></i>
              </button>
            </div>
            <!-- End Logo Header -->
          </div>
          <!-- Navbar Header -->
          <nav
            class="navbar navbar-header navbar-header-transparent navbar-expand-lg border-bottom"
          >
            <div class="container-fluid">
              

              <ul class="navbar-nav topbar-nav ms-md-auto align-items-center">
                <li
                  class="nav-item topbar-icon dropdown hidden-caret d-flex d-lg-none"
                >
                  <a
                    class="nav-link dropdown-toggle"
                    data-bs-toggle="dropdown"
                    href="#"
                    role="button"
                    aria-expanded="false"
                    aria-haspopup="true"
                  >
                    <i class="fa fa-search"></i>
                  </a>
                  <ul class="dropdown-menu dropdown-search animated fadeIn">
                    <form class="navbar-left navbar-form nav-search">
                      <div class="input-group">
                        <input
                          type="text"
                          placeholder="Search ..."
                          class="form-control"
                        />
                      </div>
                    </form>
                  </ul>
                </li>
                
                <li class="nav-item topbar-icon dropdown hidden-caret">
                  
                  <ul
                    class="dropdown-menu notif-box animated fadeIn"
                    aria-labelledby="notifDropdown"
                  >
                    <li>
                      <div class="dropdown-title">
                        Tem 3 novas notificações
                      </div>
                    </li>
                    <li>
                      <div class="notif-scroll scrollbar-outer">
                        <div class="notif-center">
                          <a href="#">
                            <div class="notif-content">
                              <span class="block"> Uma nova reserva</span>
                              <span class="time">5 minutos atrás</span>
                            </div>
                          </a>
                          <a href="#">
                            <div class="notif-icon notif-success">
                              <i class="fa fa-comment"></i>
                            </div>
                            <div class="notif-content">
                              <span class="block">
                                 Uma nova reserva
                              </span>
                              <span class="time">12 minutos atrás</span>
                            </div>
                          </a>
                          <a href="#">
                            <div class="notif-img">
                              <img
                                src="assets/img/profile2.jpg"
                                alt="Img Profile"
                              />
                            </div>
                            <div class="notif-content">
                               <span class="block">
                                 Uma nova reserva
                              </span>
                              <span class="time">23 minutos atrás</span>
                            </div>
                          </a>
                        </div>
                      </div>
                    </li>
                    <li>
                      <a class="see-all" href="javascript:void(0);"
                        >ver todas as notificações<i class="fa fa-angle-right"></i>
                      </a>
                    </li>
                  </ul>
                </li>
                
                <li class="nav-item topbar-user dropdown hidden-caret">
                  <a
                    class="dropdown-toggle profile-pic"
                    data-bs-toggle="dropdown"
                    href="#"
                    aria-expanded="false"
                  >
                    <div class="avatar-sm">
                      <img
                        src="img/logo.png"
                        alt="..."
                        class="avatar-img rounded-circle bg-primary"
                      />
                    </div>
                    <span class="profile-username">
                      <span class="fw-bold">Jonas da Luz</span>
                    </span>
                  </a>
                  <ul class="dropdown-menu dropdown-user animated fadeIn">
                    <div class="dropdown-user-scroll scrollbar-outer">
                      <li>
                        <div class="user-box">
                          <div class="avatar-lg">
                            <img
                              src="assets/img/profile.jpg"
                              alt="image profile"
                              class="avatar-img rounded"
                            />
                          </div>
                          <div class="u-text">
                            <h4>Jota</h4>
                            <p class="text-muted">jota@gmail.com</p>
                            <a
                              href="profile.html"
                              class="btn btn-xs btn-secondary btn-sm"
                              >Ver Perfil</a
                            >
                          </div>
                        </div>
                      </li>
                      <li>
                        <div class="dropdown-divider"></div>
                        <a class="dropdown-item" href="#">Terminar Sessão</a>
                      </li>
                    </div>
                  </ul>
                </li>
              </ul>
            </div>
          </nav>
          <!-- End Navbar -->
        </div>

        <div class="container">
          <div class="page-inner">
            <div class="page-header">
              <h3 class="fw-bold mb-3">Reserva de Eventos</h3>
              <ul class="breadcrumbs mb-3">
                <li class="nav-home">
                  <a href="/admin">
                    <i class="icon-home"></i>
                  </a>
                </li>
              </ul>
            </div>
            <div class="row">
              <div class="col-md-12">
                <div class="card">
                  <div class="card-header">
                    <div class="d-flex align-items-center">
                      <button
                        class="btn btn-primary btn-round ms-auto"
                        data-bs-toggle="modal"
                        data-bs-target="#addRowModal"
                      >
                        <i class="fa fa-plus"></i>
                        Adicionar Reserva
                      </button>
                    </div>
                  </div>
                  <div class="card-body">
                    <!-- Modal -->
                    <div
                      class="modal fade"
                      id="addRowModal"
                      tabindex="-1"
                      role="dialog"
                      aria-hidden="true"
                    >
                      <div class="modal-dialog" role="document">
                        <div class="modal-content">
                          <div class="modal-body">
                            <form id="admin-evento-form" class="container py-5">
                              <div class="text-center">
                                <small class="d-inline-block fw-bold text-dark text-uppercase bg-light border border-primary rounded-pill px-4 py-2 mb-4 fs-5">
                                  RESERVA
                                </small>
                              </div>
                            
                              <div class="row g-4">
                                <div class="col-12">
                                  <input type="text" name="solicitante" class="form-control form-control-lg border-primary" placeholder="Informe seu nome completo." required>
                                </div>
                                <div class="col-12">
                                  <input type="text" name="descricao" class="form-control form-control-lg border-primary" placeholder="Descreva a ideia do evento." required>
                                </div>
                                <div class="col-12">
                                  <select id="pacoteSelect" name="idPacote" class="form-select form-select-lg border-primary" required>
                                    <option selected disabled>Escolha um Pacote</option>
                                    <% pacotes.forEach(function(pacote) { %>
                                      <option value="<%= pacote.ID %>" data-preco="<%= pacote.preco %>" data-descricao="<%= pacote.descricao %>">
                                        <%= pacote.nome %>
                                      </option>
                                    <% }); %>
                                  </select>
                                </div>
                                <div class="col-12">
                                  <input type="date" name="dataRealizacao" class="form-control form-control-lg border-primary" required>
                                </div>
                                <div class="col-12">
                                  <input type="text" name="horario" class="form-control form-control-lg border-primary" placeholder="Informe o horário. Ex.: 19:00-21:00." required>
                                </div>
                                <div class="col-12">
                                  <input type="text" name="telefone" class="form-control form-control-lg border-primary" placeholder="Informe seu Telefone." required>
                                </div>
                                <div class="col-12">
                                  <input type="email" name="email" class="form-control form-control-lg border-primary" placeholder="Informe seu E-mail (opcional)">
                                </div>
                            
                                <div class="col-12 text-center mt-3">
                                  <p id="pacoteDescricao" class="text-muted fs-5"></p>
                                  <p id="pacotePreco" class="fw-bold text-primary fs-4"></p>
                                </div>
                            
                                <div class="col-12 text-center">
                                  <button type="submit" class="btn btn-primary btn-lg px-5 py-3 rounded-pill">
                                    Confirmar
                                  </button>
                                </div>
                              </div>
                            
                              <div id="error-messages" class="text-danger mt-4 fs-5 text-center"></div>
                            </form>
                <script>
                    document.addEventListener("DOMContentLoaded", function () {
                        const form = document.getElementById("admin-evento-form");
                        const errorContainer = document.getElementById("error-messages");
                        form.addEventListener("submit", async function (event) {
                            event.preventDefault();
                            errorContainer.innerHTML = "";
                            const solicitante = form.solicitante.value.trim();
                            const descricao = form.descricao.value.trim();
                            const idPacote = form.idPacote.value;
                            const dataRealizacao = form.dataRealizacao.value;
                            const horario = form.horario.value.trim();
                            const telefone = form.telefone.value.trim();
                            const email = form.email.value.trim();
                            const dataSolicitacao = new Date().toISOString().split('T')[0];
                            const status = "Pendente";
                            let errors = [];
                            if (!solicitante) errors.push("O nome do solicitante é obrigatório.");
                            if (!descricao) errors.push("A descrição do evento é obrigatória.");
                            if (!dataRealizacao) errors.push("A data de realização do evento é obrigatória.");
                            if (!telefone) errors.push("O telefone é obrigatório.");
                            const dataAtual = new Date().toISOString().split('T')[0];
                            if (dataRealizacao < dataAtual) errors.push("A data de realização não pode estar no passado.");
                            const telefoneRegex = /^[0-9]{9,}$/;
                            if (!telefoneRegex.test(telefone)) errors.push("O telefone deve conter pelo menos 9 dígitos numéricos.");
                            const horarioRegex = /^([01]\d|2[0-3]):([0-5]\d)-([01]\d|2[0-3]):([0-5]\d)$/;
                            if (horario && !horarioRegex.test(horario)) errors.push("O horário deve estar no formato HH:MM-HH:MM (Ex.: 19:00-21:00).");
                            if (email) {
                                const emailRegex = /^[^\s@]+@[^\s@]+\.[^\s@]+$/;
                                if (!emailRegex.test(email)) errors.push("O e-mail informado não é válido.");
                            }
                            if (errors.length > 0) {
                                errorContainer.innerHTML = "<strong>Erros encontrados:</strong><ul><li>" + errors.join("</li><li>") + "</li></ul>";
                                return;
                            }
                            const formData = {
                                solicitante,
                                descricao,
                                idPacote,
                                dataRealizacao,
                                horario,
                                telefone,
                                email,
                                dataSolicitacao,
                                status
                            };
                            try {
                                const response = await fetch("/admin-eventos", {
                                    method: "POST",
                                    headers: {
                                        "Content-Type": "application/json",
                                        "Accept": "application/json"
                                    },
                                    credentials: "include",
                                    body: JSON.stringify(formData)
                                });
                                const data = await response.json();
                                if (!response.ok) {
                                    throw new Error(data.error || "Erro ao processar a solicitação.");
                                }
                                alert(`Evento reservado com sucesso!\nImprima o seu comprovativo: ${data.id}.`);
                                form.reset();
                                // Fechar modal após sucesso
                                const modalEl = document.getElementById('addRowModal');
                                if (window.bootstrap && modalEl) {
                                    const modal = bootstrap.Modal.getInstance(modalEl);
                                    if (modal) modal.hide();
                                }
                                window.open('/facture/' + data.id, '_blank');
                                //location.reload(); // opcional
                            } catch (error) {
                                errorContainer.innerHTML = `<strong style=\"color:red;\">Erro: </strong>${error.message}`;
                            }
                        });
                    });
                </script>
                            <script>
                                document.getElementById("pacoteSelect").addEventListener("change", function() {
                                    let selectedOption = this.options[this.selectedIndex];
                                    let preco = selectedOption.getAttribute("data-preco") || "";
                                    let descricao = selectedOption.getAttribute("data-descricao") || "";
                                    const formatter = new Intl.NumberFormat('pt-AO', {
                                        style: 'currency',
                                        currency: 'AOA',
                                        minimumFractionDigits: 2,
                                        maximumFractionDigits: 2
                                    });
                                    const precoFormatado = formatter.format(preco)
                                    document.getElementById("pacotePreco").textContent = precoFormatado ? "Preço: Kz " + precoFormatado : "";
                                    document.getElementById("pacoteDescricao").textContent = descricao ? "Descrição do Pacote: " + descricao : "";
                                });
                            </script>

                          </div>
                          
                        </div>
                      </div>
                    </div>

                    <!-- Modal de Edição de Reserva -->
                    <div class="modal fade" id="editRowModal" tabindex="-1" role="dialog" aria-hidden="true">
                      <div class="modal-dialog" role="document">
                        <div class="modal-content">
                          <div class="modal-body">
                            <form id="edit-evento-form" class="container py-5">
                              <input type="hidden" name="id" id="edit-id">
                              <div class="text-center">
                                <small class="d-inline-block fw-bold text-dark text-uppercase bg-light border border-primary rounded-pill px-4 py-2 mb-4 fs-5">
                                  Editar Reserva
                                </small>
                              </div>
                              <div class="row g-4">
                                <div class="col-12">
                                  <input type="text" name="solicitante" id="edit-solicitante" class="form-control form-control-lg border-primary" placeholder="Informe seu nome completo." required>
                                </div>
                                <div class="col-12">
                                  <input type="text" name="descricao" id="edit-descricao" class="form-control form-control-lg border-primary" placeholder="Descreva a ideia do evento." required>
                                </div>
                                <div class="col-12">
                                  <select id="edit-pacoteSelect" name="idPacote" class="form-select form-select-lg border-primary" required>
                                    <option selected disabled>Escolha um Pacote</option>
                                    <% pacotes.forEach(function(pacote) { %>
                                      <option value="<%= pacote.ID %>" data-preco="<%= pacote.preco %>" data-descricao="<%= pacote.descricao %>">
                                        <%= pacote.nome %>
                                      </option>
                                    <% }); %>
                                  </select>
                                </div>
                                <div class="col-12">
                                  <input type="date" name="dataRealizacao" id="edit-dataRealizacao" class="form-control form-control-lg border-primary" required>
                                </div>
                                <div class="col-12">
                                  <input type="text" name="horario" id="edit-horario" class="form-control form-control-lg border-primary" placeholder="Informe o horário. Ex.: 19:00-21:00." required>
                                </div>
                                <div class="col-12">
                                  <input type="text" name="telefone" id="edit-telefone" class="form-control form-control-lg border-primary" placeholder="Informe seu Telefone." required>
                                </div>
                                <div class="col-12">
                                  <input type="email" name="email" id="edit-email" class="form-control form-control-lg border-primary" placeholder="Informe seu E-mail (opcional)">
                                </div>
                                <div class="col-12">
                                  <select name="status" id="edit-status" class="form-select form-select-lg border-primary" required>
                                    <option value="Pendente">Pendente</option>
                                    <option value="Confirmado">Confirmado</option>
                                    <option value="Cancelado">Cancelado</option>
                                  </select>
                                </div>
                                <div class="col-12 text-center mt-3">
                                  <p id="edit-pacoteDescricao" class="text-muted fs-5"></p>
                                  <p id="edit-pacotePreco" class="fw-bold text-primary fs-4"></p>
                                </div>
                                <div class="col-12 text-center">
                                  <button type="submit" class="btn btn-primary btn-lg px-5 py-3 rounded-pill">
                                    Salvar Alterações
                                  </button>
                                </div>
                              </div>
                              <div id="edit-error-messages" class="text-danger mt-4 fs-5 text-center"></div>
                            </form>
                          </div>
                        </div>
                      </div>
                    </div>

                    <div class="table-responsive">
                      <table
                        id="add-row"
                        class="display table table-striped table-hover"
                      >
                        <thead>
                          <tr>
                            <th>Solicitante</th>
                            <th>Telefone</th>
                            <th>Descrição</th>
                            <th>Pacote</th>
                            <th>Preço</th>
                            <th>Data de Realização</th>
                            <th>Data de Solicitação</th>
                            <th>Status</th>
                            <th style="width: 10%">Acção</th>
                          </tr>
                        </thead>
                        <tfoot>
                          <tr>
                            <th>Solicitante</th>
                            <th>Telefone</th>
                            <th>Descrição</th>
                            <th>Pacote</th>
                            <th>Preço</th>
                            <th>Data de Realização</th>
                            <th>Data de Solicitação</th>
                            <th>Status</th>
                            <th>Acção</th>
                          </tr>
                        </tfoot>
                        <tbody>
                          <% function formatDate(dataISO) {
                            const data = new Date(dataISO);
                            const dia = String(data.getDate()).padStart(2, '0');
                            const mes = String(data.getMonth() + 1).padStart(2, '0');
                            const ano = data.getFullYear();
                            return `${dia}/${mes}/${ano}`;
                          }
                       
                          function statusColor(status) {
                            const s = status.toLowerCase();
                            if (s === 'pendente') return 'text-warning';    // Amarelo
                            if (s === 'cancelado') return 'text-danger';    // Vermelho
                            if (s === 'confirmado') return 'text-success';  // Verde
                            return ''; // Cor padrão se não coincidir
                          }
                       %>
                       
                       <% if (eventos.length > 0) { %>
                         <% eventos.map(evento => { %> 
                           <tr>
                             <td><%= evento.solicitante %></td>
                             <td><%= evento.telefone %></td>
                             <td><%= evento.descricao %></td>
                             <td><%= evento.nome %></td>
                             <td><%= evento.preco %></td>
                             <td><%= formatDate(evento.dataSolicitacao) %></td>
                             <td><%= formatDate(evento.dataRealizacao) %></td>
                             <td class="<%= statusColor(evento.status) %>"><%= evento.status %></td>
                             <td>
                               <div class="form-button-action">
                                 <button
                                   type="button"
                                   data-bs-toggle="tooltip"
                                   title=""
                                   class="btn btn-link btn-primary btn-lg btn-edit-reserva"
                                   data-id="<%= evento.ID %>"
                                 >
                                   <i class="fa fa-edit"></i>
                                 </button>
                                 <button
                                   type="button"
                                   data-bs-toggle="tooltip"
                                   title=""
                                   class="btn btn-link btn-danger btn-delete-reserva"
                                   data-id="<%= evento.ID %>"
                                 >
                                   <i class="fa fa-times"></i>
                                 </button>
                               </div>
                             </td>
                           </tr>
                         <% }) %>
                       <% } else { %>
                         <tr>
                           <td colspan="9" class="text-center">
                             Nenhuma Reserva encontrada!
                           </td>
                         </tr>
                       <% } %>
                        </tbody>
                      </table>
                    </div>
                  </div>
                </div>
              </div>
            </div>
          </div>
        </div>

        <footer class="footer">
          <div class="container-fluid d-flex justify-content-between">
            <nav class="pull-left">
              <ul class="nav">
                <li class="nav-item">
                  <p class="nav-link" href="http://www.themekita.com">
                  </p>
                </li>
                <li class="nav-item">
                  <p class="nav-link" href="#">  </p>
                </li>
                <li class="nav-item">
                  <p class="nav-link" href="#">  </p>
                </li>
              </ul>
            </nav>
          </div>
        </footer>
      </div>

     
    <!--   Core JS Files   -->
    <script src="../assets/js/core/jquery-3.7.1.min.js"></script>
    <script src="../assets/js/core/popper.min.js"></script>
    <script src="../assets/js/core/bootstrap.min.js"></script>

    <!-- jQuery Scrollbar -->
    <script src="../assets/js/plugin/jquery-scrollbar/jquery.scrollbar.min.js"></script>
    <!-- Datatables -->
    <script src="../assets/js/plugin/datatables/datatables.min.js"></script>
    <!-- Kaiadmin JS -->
    <script src="../assets/js/kaiadmin.min.js"></script>
    <!-- Kaiadmin DEMO methods, don't include it in your project! -->
    <script src="../assets/js/setting-demo2.js"></script>
    <script>
      $(document).ready(function () {
        $("#basic-datatables").DataTable({});

        $("#multi-filter-select").DataTable({
          pageLength: 5,
          initComplete: function () {
            this.api()
              .columns()
              .every(function () {
                var column = this;
                var select = $(
                  '<select class="form-select"><option value=""></option></select>'
                )
                  .appendTo($(column.footer()).empty())
                  .on("change", function () {
                    var val = $.fn.dataTable.util.escapeRegex($(this).val());

                    column
                      .search(val ? "^" + val + "$" : "", true, false)
                      .draw();
                  });

                column
                  .data()
                  .unique()
                  .sort()
                  .each(function (d, j) {
                    select.append(
                      '<option value="' + d + '">' + d + "</option>"
                    );
                  });
              });
          },
        });

        // Add Row
        $("#add-row").DataTable({
          pageLength: 5,
        });

        var action =
          '<td> <div class="form-button-action"> <button type="button" data-bs-toggle="tooltip" title="" class="btn btn-link btn-primary btn-lg" data-original-title="Edit Task"> <i class="fa fa-edit"></i> </button> <button type="button" data-bs-toggle="tooltip" title="" class="btn btn-link btn-danger" data-original-title="Remove"> <i class="fa fa-times"></i> </button> </div> </td>';

        $("#addRowButton").click(function () {
          $("#add-row")
            .dataTable()
            .fnAddData([
              $("#addName").val(),
              $("#addPosition").val(),
              $("#addOffice").val(),
              action,
            ]);
          $("#addRowModal").modal("hide");
        });
      });
    </script>
    <script>
    // Função para formatar datas (yyyy-mm-dd para input date)
    function formatDateInput(dateStr) {
      if (!dateStr) return '';
      const d = new Date(dateStr);
      const month = (d.getMonth() + 1).toString().padStart(2, '0');
      const day = d.getDate().toString().padStart(2, '0');
      return `${d.getFullYear()}-${month}-${day}`;
    }

    // Atualiza apenas o tbody da tabela de reservas
    async function atualizarTabelaReservas() {
      const tbody = document.querySelector('#add-row tbody');
      tbody.innerHTML = '<tr><td colspan="9" class="text-center">Carregando...</td></tr>';
      try {
        const res = await fetch('/eventos-json');
        const eventos = await res.json();
        if (!Array.isArray(eventos) || eventos.length === 0) {
          tbody.innerHTML = '<tr><td colspan="9" class="text-center">Nenhuma Reserva encontrada!</td></tr>';
          return;
        }
        tbody.innerHTML = '';
        eventos.forEach(evento => {
          const statusClass = evento.status && evento.status.toLowerCase() === 'pendente' ? 'text-warning' :
            evento.status && evento.status.toLowerCase() === 'cancelado' ? 'text-danger' :
            evento.status && evento.status.toLowerCase() === 'confirmado' ? 'text-success' : '';
          tbody.innerHTML += `
            <tr>
              <td>${evento.solicitante || ''}</td>
              <td>${evento.telefone || ''}</td>
              <td>${evento.descricao || ''}</td>
              <td>${evento.nome || ''}</td>
              <td>${evento.preco || ''}</td>
              <td>${evento.dataSolicitacao ? new Date(evento.dataSolicitacao).toLocaleDateString() : ''}</td>
              <td>${evento.dataRealizacao ? new Date(evento.dataRealizacao).toLocaleDateString() : ''}</td>
              <td class="${statusClass}">${evento.status || ''}</td>
              <td>
                <div class="form-button-action">
                  <button type="button" class="btn btn-link btn-primary btn-lg btn-edit-reserva" data-id="${evento.ID}"><i class="fa fa-edit"></i></button>
                  <button type="button" class="btn btn-link btn-danger btn-delete-reserva" data-id="${evento.ID}"><i class="fa fa-times"></i></button>
                </div>
              </td>
            </tr>
          `;
        });
      } catch (e) {
        tbody.innerHTML = '<tr><td colspan="9" class="text-center">Erro ao carregar reservas!</td></tr>';
      }
    }

    document.addEventListener('DOMContentLoaded', function () {
      // Atualiza a tabela ao carregar a página
      atualizarTabelaReservas();

      // Editar reserva: abrir modal e preencher campos
      document.querySelector('#add-row tbody').addEventListener('click', async function (e) {
        if (e.target.closest('.btn-edit-reserva')) {
          const id = e.target.closest('.btn-edit-reserva').dataset.id;
          const res = await fetch(`/eventos/${id}`);
          const evento = await res.json();
          document.getElementById('edit-id').value = evento.ID;
          document.getElementById('edit-solicitante').value = evento.solicitante || '';
          document.getElementById('edit-descricao').value = evento.descricao || '';
          document.getElementById('edit-pacoteSelect').value = evento.idPacote || '';
          document.getElementById('edit-dataRealizacao').value = formatDateInput(evento.dataRealizacao);
          document.getElementById('edit-horario').value = evento.horario || '';
          document.getElementById('edit-telefone').value = evento.telefone || '';
          document.getElementById('edit-email').value = evento.email || '';
          document.getElementById('edit-status').value = evento.status || 'Pendente';
          // Atualiza descrição/preço do pacote
          const selectedOption = document.getElementById('edit-pacoteSelect').selectedOptions[0];
          document.getElementById('edit-pacoteDescricao').textContent = selectedOption ? 'Descrição do Pacote: ' + (selectedOption.getAttribute('data-descricao') || '') : '';
          document.getElementById('edit-pacotePreco').textContent = selectedOption ? 'Preço: Kz ' + (selectedOption.getAttribute('data-preco') || '') : '';
          // Abrir modal
          const editModal = new bootstrap.Modal(document.getElementById('editRowModal'));
          editModal.show();
        }
      });

      // Atualiza descrição/preço do pacote ao trocar select no modal de edição
      document.getElementById('edit-pacoteSelect').addEventListener('change', function() {
        let selectedOption = this.options[this.selectedIndex];
        let preco = selectedOption.getAttribute('data-preco') || '';
        let descricao = selectedOption.getAttribute('data-descricao') || '';
        document.getElementById('edit-pacotePreco').textContent = preco ? 'Preço: Kz ' + preco : '';
        document.getElementById('edit-pacoteDescricao').textContent = descricao ? 'Descrição do Pacote: ' + descricao : '';
      });

      // Submeter edição de reserva
      document.getElementById('edit-evento-form').addEventListener('submit', async function (event) {
        event.preventDefault();
        const id = document.getElementById('edit-id').value;
        const solicitante = document.getElementById('edit-solicitante').value.trim();
        const descricao = document.getElementById('edit-descricao').value.trim();
        const idPacote = document.getElementById('edit-pacoteSelect').value;
        const dataRealizacao = document.getElementById('edit-dataRealizacao').value;
        const horario = document.getElementById('edit-horario').value.trim();
        const telefone = document.getElementById('edit-telefone').value.trim();
        const email = document.getElementById('edit-email').value.trim();
        const status = document.getElementById('edit-status').value;
        const dataSolicitacao = new Date().toISOString().split('T')[0];
        let errors = [];
        if (!solicitante) errors.push('O nome do solicitante é obrigatório.');
        if (!descricao) errors.push('A descrição do evento é obrigatória.');
        if (!dataRealizacao) errors.push('A data de realização do evento é obrigatória.');
        if (!telefone) errors.push('O telefone é obrigatório.');
        const telefoneRegex = /^[0-9]{9,}$/;
        if (!telefoneRegex.test(telefone)) errors.push('O telefone deve conter pelo menos 9 dígitos numéricos.');
        const horarioRegex = /^([01]\d|2[0-3]):([0-5]\d)-([01]\d|2[0-3]):([0-5]\d)$/;
        if (horario && !horarioRegex.test(horario)) errors.push('O horário deve estar no formato HH:MM-HH:MM (Ex.: 19:00-21:00).');
        if (email) {
          const emailRegex = /^[^\s@]+@[^\s@]+\.[^\s@]+$/;
          if (!emailRegex.test(email)) errors.push('O e-mail informado não é válido.');
        }
        if (errors.length > 0) {
          document.getElementById('edit-error-messages').innerHTML = '<strong>Erros encontrados:</strong><ul><li>' + errors.join('</li><li>') + '</li></ul>';
          return;
        }
        const formData = {
          solicitante,
          descricao,
          idPacote,
          dataRealizacao,
          horario,
          telefone,
          email,
          status,
          dataSolicitacao
        };
        try {
          const response = await fetch(`/eventos/${id}`, {
            method: 'PUT',
            headers: {
              'Content-Type': 'application/json',
              'Accept': 'application/json'
            },
            credentials: 'include',
            body: JSON.stringify(formData)
          });
          const data = await response.json();
          if (!response.ok) {
            throw new Error(data.error || 'Erro ao processar a solicitação.');
          }
          // Fechar modal
          const modalEl = document.getElementById('editRowModal');
          if (window.bootstrap && modalEl) {
            const modal = bootstrap.Modal.getInstance(modalEl);
            if (modal) modal.hide();
          }
          atualizarTabelaReservas();
        } catch (error) {
          document.getElementById('edit-error-messages').innerHTML = `<strong style="color:red;">Erro: </strong>${error.message}`;
        }
      });

      // Excluir reserva
      document.querySelector('#add-row tbody').addEventListener('click', async function (e) {
        if (e.target.closest('.btn-delete-reserva')) {
          const id = e.target.closest('.btn-delete-reserva').dataset.id;
          if (confirm('Tem certeza que deseja excluir esta reserva?')) {
            try {
              const response = await fetch(`/eventos/${id}`, {
                method: 'DELETE',
                headers: { 'Accept': 'application/json' },
                credentials: 'include'
              });
              const data = await response.json();
              if (!response.ok) {
                throw new Error(data.error || 'Erro ao excluir reserva.');
              }
              atualizarTabelaReservas();
            } catch (error) {
              alert('Erro ao excluir reserva: ' + error.message);
            }
          }
        }
        });
      });
    </script>
  </body>
</html>
